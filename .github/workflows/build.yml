name: Build and Push API Image

on:
  push:
    branches:
      - 'main'  # Trigger on pushes to the main branch
  release:
    types: [published]  # Trigger on published releases

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # The type of runner that the job will run on
    steps:
      - name: Check out code
        uses: actions/checkout@v3  # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}  # Your Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Your Docker Hub token

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: vontainment/gpt-pdf-generator  # Change to your Docker image name
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=branch
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
            type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .  # Directory to use as context for Docker build (your project root)
          file: Dockerfile
          push: true  # Pushes the image to Docker Hub
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_SHA=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline,mode=max
