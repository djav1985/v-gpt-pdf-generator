name: Build and Push Docker Image

on:
  push:
    branches:
      - "main"
      - "dev"
  release:
    types: [published]
  workflow_dispatch:
    # Allow manual triggering of the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      actions: read
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          use: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/v-gpt-pdf-generator
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.action == 'published' }}
            type=sha,priority=100,enable=true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REPO_URL=https://github.com/${{ github.repository }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Cleanup dangling images
        run: |
          docker image prune -f
