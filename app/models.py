# models.py
from pydantic import BaseModel, Field
from typing import Optional


# Request model for creating a PDF
class CreatePDFRequest(BaseModel):
    html_content: str = Field(
        ...,
        description="HTML content to be converted into a PDF document. This content can include: Element IDs and class attributes for styling with CSS. Image elements using <img> tags with absolute URLs. Images generated by the DALL-E tool, incorporated via absolute URLs. Provide corresponding CSS styles through the 'css_content' parameter to style these elements.",
    )
    css_content: Optional[str] = Field(
        default="body { font-family: 'Arial', sans-serif; } h1, h2, h3, h4, h5, h6 { color: #66cc33; } p { margin: 0.5em 0; } a { color: #66cc33; text-decoration: none; }",
        description="Optional CSS styles to format the HTML content. Style elements by using selectors such as tags, classes, and IDs. Provide custom styles or override the default CSS provided here.",
    )
    output_filename: Optional[str] = Field(
        default=None,
        description="Optional filename, use - for spaces and do not include the extension.",
    )
